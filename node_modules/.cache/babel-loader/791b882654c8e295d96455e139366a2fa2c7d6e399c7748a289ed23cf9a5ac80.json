{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aquera\\\\frontend_challange\\\\src\\\\components\\\\PlanetCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetCardContainer = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: '#f9f5e3',\n  borderRadius: theme.spacing(1),\n  height: '300px',\n  overflow: 'auto',\n  transition: 'transform 0.3s ease-in-out',\n  // Add transition for smoother hover effect\n  '&:hover': {\n    transform: 'scale(1.05)' // Increase scale on hover for a subtle zoom effect\n  },\n  '&::-webkit-scrollbar': {\n    width: '0px',\n    // Hide scrollbar for Webkit browsers (Chrome, Safari)\n    background: 'transparent' // Optional: set background color of the scrollbar track\n  },\n  scrollbarWidth: 'none' // Hide scrollbar for Firefox\n}));\n_c = PlanetCardContainer;\nconst ResidentsList = styled('div')({\n  marginTop: '16px',\n  paddingLeft: '16px'\n});\n_c2 = ResidentsList;\nconst PlanetCard = ({\n  planet\n}) => {\n  _s();\n  const [residents, setResidents] = useState([]);\n  useEffect(() => {\n    const fetchResidents = async () => {\n      try {\n        const residentsData = await Promise.all(planet.residents.map(async residentUrl => {\n          const response = await fetch(residentUrl);\n          return await response.json();\n        }));\n        setResidents(residentsData);\n      } catch (error) {\n        console.error('Error fetching residents:', error);\n      }\n    };\n    fetchResidents();\n  }, [planet.residents]);\n\n  // Define color mapping based on the content\n  const getColor = content => {\n    switch (content) {\n      case 'hot':\n        return '#ff0000';\n      // Red for hot climate\n      case 1400000000:\n        return '#ff7f00';\n      // Orange for large population\n      case 'caves, desert, mountains, volcanoes':\n        return '#0000ff';\n      // Blue for specific terrain\n      case 'Residents':\n        return '#00ff00';\n      // Green for residents\n      default:\n        return '#102742';\n      // Default color for other content\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PlanetCardContainer, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      gutterBottom: true,\n      style: {\n        color: getColor(planet.name)\n      },\n      children: planet.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      style: {\n        color: getColor(planet.climate)\n      },\n      children: [\"Climate: \", planet.climate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      style: {\n        color: getColor(planet.population)\n      },\n      children: [\"Population: \", planet.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      style: {\n        color: getColor(planet.terrain)\n      },\n      children: [\"Terrain: \", planet.terrain]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResidentsList, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        style: {\n          color: getColor('Residents')\n        },\n        children: \"Residents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: residents.map((resident, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: getColor(resident.name)\n          },\n          children: resident.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetCard, \"RzLAUQ5GJczYjz0OYoaAJykFDdE=\");\n_c3 = PlanetCard;\nexport default PlanetCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PlanetCardContainer\");\n$RefreshReg$(_c2, \"ResidentsList\");\n$RefreshReg$(_c3, \"PlanetCard\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","styled","jsxDEV","_jsxDEV","PlanetCardContainer","theme","padding","spacing","backgroundColor","borderRadius","height","overflow","transition","transform","width","background","scrollbarWidth","_c","ResidentsList","marginTop","paddingLeft","_c2","PlanetCard","planet","_s","residents","setResidents","fetchResidents","residentsData","Promise","all","map","residentUrl","response","fetch","json","error","console","getColor","content","elevation","children","variant","component","gutterBottom","style","color","name","fileName","_jsxFileName","lineNumber","columnNumber","climate","population","terrain","resident","index","_c3","$RefreshReg$"],"sources":["E:/Aquera/frontend_challange/src/components/PlanetCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Paper, Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst PlanetCardContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  backgroundColor: '#f9f5e3',\r\n  borderRadius: theme.spacing(1),\r\n  height: '300px',\r\n  overflow: 'auto',\r\n  transition: 'transform 0.3s ease-in-out', // Add transition for smoother hover effect\r\n  '&:hover': {\r\n    transform: 'scale(1.05)', // Increase scale on hover for a subtle zoom effect\r\n  },\r\n  '&::-webkit-scrollbar': {\r\n    width: '0px',  // Hide scrollbar for Webkit browsers (Chrome, Safari)\r\n    background: 'transparent',  // Optional: set background color of the scrollbar track\r\n  },\r\n  scrollbarWidth: 'none',  // Hide scrollbar for Firefox\r\n}));\r\n\r\nconst ResidentsList = styled('div')({\r\n  marginTop: '16px',\r\n  paddingLeft: '16px',\r\n});\r\n\r\nconst PlanetCard = ({ planet }) => {\r\n  const [residents, setResidents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchResidents = async () => {\r\n      try {\r\n        const residentsData = await Promise.all(\r\n          planet.residents.map(async (residentUrl) => {\r\n            const response = await fetch(residentUrl);\r\n            return await response.json();\r\n          })\r\n        );\r\n        setResidents(residentsData);\r\n      } catch (error) {\r\n        console.error('Error fetching residents:', error);\r\n      }\r\n    };\r\n\r\n    fetchResidents();\r\n  }, [planet.residents]);\r\n\r\n  // Define color mapping based on the content\r\n  const getColor = (content) => {\r\n    switch (content) {\r\n      case 'hot':\r\n        return '#ff0000'; // Red for hot climate\r\n      case 1400000000:\r\n        return '#ff7f00'; // Orange for large population\r\n      case 'caves, desert, mountains, volcanoes':\r\n        return '#0000ff'; // Blue for specific terrain\r\n      case 'Residents':\r\n        return '#00ff00'; // Green for residents\r\n      default:\r\n        return '#102742'; // Default color for other content\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PlanetCardContainer elevation={3}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom style={{ color: getColor(planet.name) }}>\r\n        {planet.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom style={{ color: getColor(planet.climate) }}>\r\n        Climate: {planet.climate}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom style={{ color: getColor(planet.population) }}>\r\n        Population: {planet.population}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom style={{ color: getColor(planet.terrain) }}>\r\n        Terrain: {planet.terrain}\r\n      </Typography>\r\n      <ResidentsList>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom style={{ color: getColor('Residents') }}>\r\n          Residents:\r\n        </Typography>\r\n        <ul>\r\n          {residents.map((resident, index) => (\r\n            <li key={index} style={{ color: getColor(resident.name) }}>{resident.name}</li>\r\n          ))}\r\n        </ul>\r\n      </ResidentsList>\r\n    </PlanetCardContainer>\r\n  );\r\n};\r\n\r\nexport default PlanetCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}