{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aquera\\\\frontend_challange\\\\src\\\\components\\\\PlanetCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetCardContainer = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: 'darkcyan',\n  borderRadius: theme.spacing(1),\n  height: '300px',\n  overflow: 'auto',\n  transition: 'transform 0.3s ease-in-out',\n  // Add transition for smoother hover effect\n  '&:hover': {\n    transform: 'scale(1.05)' // Increase scale on hover for a subtle zoom effect\n  }\n}));\n_c = PlanetCardContainer;\nconst ResidentsList = styled('div')({\n  marginTop: '16px',\n  paddingLeft: '16px',\n  width: \"100vw\",\n  height: \"100vh\",\n  overflow: \"hidden\"\n});\n_c2 = ResidentsList;\nconst PlanetCard = ({\n  planet\n}) => {\n  _s();\n  const [residents, setResidents] = useState([]);\n  useEffect(() => {\n    const fetchResidents = async () => {\n      try {\n        const residentsData = await Promise.all(planet.residents.map(async residentUrl => {\n          const response = await fetch(residentUrl);\n          return await response.json();\n        }));\n        setResidents(residentsData);\n      } catch (error) {\n        console.error('Error fetching residents:', error);\n      }\n    };\n    fetchResidents();\n  }, [planet.residents]);\n  return /*#__PURE__*/_jsxDEV(PlanetCardContainer, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      gutterBottom: true,\n      children: planet.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Climate: \", planet.climate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Population: \", planet.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Terrain: \", planet.terrain]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResidentsList, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Residents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: residents.map((resident, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: resident.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetCard, \"RzLAUQ5GJczYjz0OYoaAJykFDdE=\");\n_c3 = PlanetCard;\nexport default PlanetCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PlanetCardContainer\");\n$RefreshReg$(_c2, \"ResidentsList\");\n$RefreshReg$(_c3, \"PlanetCard\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","styled","jsxDEV","_jsxDEV","PlanetCardContainer","theme","padding","spacing","backgroundColor","borderRadius","height","overflow","transition","transform","_c","ResidentsList","marginTop","paddingLeft","width","_c2","PlanetCard","planet","_s","residents","setResidents","fetchResidents","residentsData","Promise","all","map","residentUrl","response","fetch","json","error","console","elevation","children","variant","component","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","color","climate","population","terrain","resident","index","_c3","$RefreshReg$"],"sources":["E:/Aquera/frontend_challange/src/components/PlanetCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Paper, Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst PlanetCardContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  backgroundColor: 'darkcyan',\r\n  borderRadius: theme.spacing(1),\r\n  height: '300px',\r\n  overflow: 'auto',\r\n  transition: 'transform 0.3s ease-in-out', // Add transition for smoother hover effect\r\n  '&:hover': {\r\n    transform: 'scale(1.05)', // Increase scale on hover for a subtle zoom effect\r\n  },\r\n}));\r\n\r\nconst ResidentsList = styled('div')({\r\n  marginTop: '16px',\r\n  paddingLeft: '16px',\r\n  width: \"100vw\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n});\r\n\r\nconst PlanetCard = ({ planet }) => {\r\n  const [residents, setResidents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchResidents = async () => {\r\n      try {\r\n        const residentsData = await Promise.all(\r\n          planet.residents.map(async (residentUrl) => {\r\n            const response = await fetch(residentUrl);\r\n            return await response.json();\r\n          })\r\n        );\r\n        setResidents(residentsData);\r\n      } catch (error) {\r\n        console.error('Error fetching residents:', error);\r\n      }\r\n    };\r\n\r\n    fetchResidents();\r\n  }, [planet.residents]);\r\n\r\n  return (\r\n    <PlanetCardContainer elevation={3}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n        {planet.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n        Climate: {planet.climate}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n        Population: {planet.population}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n        Terrain: {planet.terrain}\r\n      </Typography>\r\n      <ResidentsList>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Residents:\r\n        </Typography>\r\n        <ul>\r\n          {residents.map((resident, index) => (\r\n            <li key={index}>{resident.name}</li>\r\n          ))}\r\n        </ul>\r\n      </ResidentsList>\r\n    </PlanetCardContainer>\r\n  );\r\n};\r\n\r\nexport default PlanetCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}