{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aquera\\\\frontend_challange\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid } from '@mui/material';\nimport PlanetCard from './components/PlanetCard';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://swapi.dev/api/planets/');\n  const [nextPageUrl, setNextPageUrl] = useState('');\n  const [prevPageUrl, setPrevPageUrl] = useState('');\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch(currentPageUrl);\n        const data = await response.json();\n        setPlanets(data.results);\n        setNextPageUrl(data.next);\n        setPrevPageUrl(data.previous);\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n    fetchPlanets();\n  }, [currentPageUrl]);\n  const goToNextPage = () => {\n    setCurrentPageUrl(nextPageUrl);\n  };\n  const goToPrevPage = () => {\n    setCurrentPageUrl(prevPageUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-5\",\n      style: {\n        position: 'sticky',\n        top: 0,\n        backgroundColor: '#ffffff',\n        zIndex: 1\n      },\n      children: \"Star Wars Planets Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: planets.map((planet, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(PlanetCard, {\n          planet: planet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      goToNextPage: nextPageUrl ? goToNextPage : null,\n      goToPrevPage: prevPageUrl ? goToPrevPage : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OUPXf5lLQ3ihvTstj4tSdJ3nQG4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","PlanetCard","Pagination","jsxDEV","_jsxDEV","App","_s","planets","setPlanets","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","fetchPlanets","response","fetch","data","json","results","next","previous","error","console","goToNextPage","goToPrevPage","className","style","position","children","top","backgroundColor","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","planet","index","item","xs","sm","md","lg","_c","$RefreshReg$"],"sources":["E:/Aquera/frontend_challange/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Grid } from '@mui/material';\nimport PlanetCard from './components/PlanetCard';\nimport Pagination from './components/Pagination';\n\nconst App = () => {\n  const [planets, setPlanets] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://swapi.dev/api/planets/');\n  const [nextPageUrl, setNextPageUrl] = useState('');\n  const [prevPageUrl, setPrevPageUrl] = useState('');\n\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch(currentPageUrl);\n        const data = await response.json();\n        setPlanets(data.results);\n        setNextPageUrl(data.next);\n        setPrevPageUrl(data.previous);\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n\n    fetchPlanets();\n  }, [currentPageUrl]);\n\n  const goToNextPage = () => {\n    setCurrentPageUrl(nextPageUrl);\n  };\n\n  const goToPrevPage = () => {\n    setCurrentPageUrl(prevPageUrl);\n  };\n\n  return (\n    <Container className=\"mt-3\" style={{ position: 'relative' }}>\n      <h1 className=\"text-center mb-5\" style={{ position: 'sticky', top: 0, backgroundColor: '#ffffff', zIndex: 1 }}>\n        Star Wars Planets Directory\n      </h1>\n      <Grid container spacing={3}>\n        {planets.map((planet, index) => (\n          <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\n            <PlanetCard planet={planet} />\n          </Grid>\n        ))}\n      </Grid>\n      <Pagination \n        goToNextPage={nextPageUrl ? goToNextPage : null} \n        goToPrevPage={prevPageUrl ? goToPrevPage : null} \n      />\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}