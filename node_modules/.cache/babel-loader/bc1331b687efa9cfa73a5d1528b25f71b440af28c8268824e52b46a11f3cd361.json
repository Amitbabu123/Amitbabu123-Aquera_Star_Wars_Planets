{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aquera\\\\frontend_challange\\\\src\\\\components\\\\PlanetCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlanetCardContainer = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: '#f5f5f5',\n  borderRadius: theme.spacing(1),\n  height: '250px',\n  // Reduced card height\n  overflow: 'auto',\n  transition: 'transform 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'scale(1.05)'\n  }\n}));\n_c = PlanetCardContainer;\nconst ResidentsList = styled('div')({\n  marginTop: '16px',\n  paddingLeft: '16px'\n});\n_c2 = ResidentsList;\nconst Footer = styled('footer')({\n  position: 'fixed',\n  bottom: '0',\n  left: '0',\n  width: '100%',\n  backgroundColor: '#121212',\n  color: '#ffffff',\n  textAlign: 'center',\n  padding: '10px 0'\n});\n_c3 = Footer;\nconst PlanetCard = ({\n  planet\n}) => {\n  _s();\n  const [residents, setResidents] = useState([]);\n  useEffect(() => {\n    const fetchResidents = async () => {\n      try {\n        const residentsData = await Promise.all(planet.residents.map(async residentUrl => {\n          const response = await fetch(residentUrl);\n          return await response.json();\n        }));\n        setResidents(residentsData);\n      } catch (error) {\n        console.error('Error fetching residents:', error);\n      }\n    };\n    fetchResidents();\n  }, [planet.residents]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlanetCardContainer, {\n      elevation: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: planet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: [\"Climate: \", planet.climate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: [\"Population: \", planet.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: [\"Terrain: \", planet.terrain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResidentsList, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Residents:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: residents.map((resident, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: resident.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"Created by Amit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PlanetCard, \"RzLAUQ5GJczYjz0OYoaAJykFDdE=\");\n_c4 = PlanetCard;\nexport default PlanetCard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlanetCardContainer\");\n$RefreshReg$(_c2, \"ResidentsList\");\n$RefreshReg$(_c3, \"Footer\");\n$RefreshReg$(_c4, \"PlanetCard\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Box","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","PlanetCardContainer","theme","padding","spacing","backgroundColor","borderRadius","height","overflow","transition","transform","_c","ResidentsList","marginTop","paddingLeft","_c2","Footer","position","bottom","left","width","color","textAlign","_c3","PlanetCard","planet","_s","residents","setResidents","fetchResidents","residentsData","Promise","all","map","residentUrl","response","fetch","json","error","console","children","elevation","variant","component","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","climate","population","terrain","resident","index","_c4","$RefreshReg$"],"sources":["E:/Aquera/frontend_challange/src/components/PlanetCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Paper, Typography, Box } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst PlanetCardContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  backgroundColor: '#f5f5f5',\r\n  borderRadius: theme.spacing(1),\r\n  height: '250px', // Reduced card height\r\n  overflow: 'auto',\r\n  transition: 'transform 0.3s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'scale(1.05)',\r\n  },\r\n}));\r\n\r\nconst ResidentsList = styled('div')({\r\n  marginTop: '16px',\r\n  paddingLeft: '16px',\r\n});\r\n\r\nconst Footer = styled('footer')({\r\n  position: 'fixed',\r\n  bottom: '0',\r\n  left: '0',\r\n  width: '100%',\r\n  backgroundColor: '#121212',\r\n  color: '#ffffff',\r\n  textAlign: 'center',\r\n  padding: '10px 0',\r\n});\r\n\r\nconst PlanetCard = ({ planet }) => {\r\n  const [residents, setResidents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchResidents = async () => {\r\n      try {\r\n        const residentsData = await Promise.all(\r\n          planet.residents.map(async (residentUrl) => {\r\n            const response = await fetch(residentUrl);\r\n            return await response.json();\r\n          })\r\n        );\r\n        setResidents(residentsData);\r\n      } catch (error) {\r\n        console.error('Error fetching residents:', error);\r\n      }\r\n    };\r\n\r\n    fetchResidents();\r\n  }, [planet.residents]);\r\n\r\n  return (\r\n    <>\r\n      <PlanetCardContainer elevation={4}>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n          {planet.name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Climate: {planet.climate}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Population: {planet.population}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Terrain: {planet.terrain}\r\n        </Typography>\r\n        <ResidentsList>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n            Residents:\r\n          </Typography>\r\n          <ul>\r\n            {residents.map((resident, index) => (\r\n              <li key={index}>{resident.name}</li>\r\n            ))}\r\n          </ul>\r\n        </ResidentsList>\r\n      </PlanetCardContainer>\r\n      <Footer>\r\n        <Typography variant=\"body2\">\r\n          Created by Amit\r\n        </Typography>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanetCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}