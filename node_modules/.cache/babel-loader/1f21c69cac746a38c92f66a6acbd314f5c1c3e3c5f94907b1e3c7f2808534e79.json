{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aquera\\\\frontend_challange\\\\src\\\\components\\\\PlanetCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, makeStyles } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  planetCard: {\n    padding: theme.spacing(2),\n    backgroundColor: '#f5f5f5',\n    // Light gray background\n    borderRadius: theme.spacing(1),\n    minHeight: '250px' // Set a minimum height to ensure consistent card size\n  },\n  residentsList: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  }\n}));\nconst PlanetCard = ({\n  planet\n}) => {\n  _s();\n  const classes = useStyles();\n  const [residents, setResidents] = useState([]);\n  useEffect(() => {\n    const fetchResidents = async () => {\n      try {\n        const residentsData = await Promise.all(planet.residents.map(async residentUrl => {\n          const response = await fetch(residentUrl);\n          return await response.json();\n        }));\n        setResidents(residentsData);\n      } catch (error) {\n        console.error('Error fetching residents:', error);\n      }\n    };\n    fetchResidents();\n  }, [planet.residents]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.planetCard,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      gutterBottom: true,\n      children: planet.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Climate: \", planet.climate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Population: \", planet.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Terrain: \", planet.terrain]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.residentsList,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Residents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: residents.map((resident, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: resident.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetCard, \"ta8E+yDRkitTrbGC+3TRIaj0iyI=\", false, function () {\n  return [useStyles];\n});\n_c = PlanetCard;\nexport default PlanetCard;\nvar _c;\n$RefreshReg$(_c, \"PlanetCard\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","planetCard","padding","spacing","backgroundColor","borderRadius","minHeight","residentsList","marginTop","paddingLeft","PlanetCard","planet","_s","classes","residents","setResidents","fetchResidents","residentsData","Promise","all","map","residentUrl","response","fetch","json","error","console","className","elevation","children","variant","component","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","color","climate","population","terrain","resident","index","_c","$RefreshReg$"],"sources":["E:/Aquera/frontend_challange/src/components/PlanetCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Paper, Typography, makeStyles } from '@mui/material';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  planetCard: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: '#f5f5f5', // Light gray background\r\n    borderRadius: theme.spacing(1),\r\n    minHeight: '250px', // Set a minimum height to ensure consistent card size\r\n  },\r\n  residentsList: {\r\n    marginTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PlanetCard = ({ planet }) => {\r\n  const classes = useStyles();\r\n  const [residents, setResidents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchResidents = async () => {\r\n      try {\r\n        const residentsData = await Promise.all(\r\n          planet.residents.map(async (residentUrl) => {\r\n            const response = await fetch(residentUrl);\r\n            return await response.json();\r\n          })\r\n        );\r\n        setResidents(residentsData);\r\n      } catch (error) {\r\n        console.error('Error fetching residents:', error);\r\n      }\r\n    };\r\n\r\n    fetchResidents();\r\n  }, [planet.residents]);\r\n\r\n  return (\r\n    <Paper className={classes.planetCard} elevation={3}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n        {planet.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n        Climate: {planet.climate}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n        Population: {planet.population}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n        Terrain: {planet.terrain}\r\n      </Typography>\r\n      <div className={classes.residentsList}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Residents:\r\n        </Typography>\r\n        <ul>\r\n          {residents.map((resident, index) => (\r\n            <li key={index}>{resident.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PlanetCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}